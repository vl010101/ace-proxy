#!/bin/bash

## Установка и настройка HTTPAceProxy, Ace Stream Engine, Supervisor, L.A.M.P. в Ubuntu 20.04

## Добавление репозитария PHP для установки последней версии 7.4.x
cd /etc/apt/sources.list.d; echo "deb http://ppa.launchpad.net/ondrej/php/ubuntu $(lsb_release -cs) main" | sudo tee php.list > /dev/null; sudo apt-key adv --recv-keys --keyserver hkps://keyserver.ubuntu.com:443 4F4EA0AAE5267A6C; cd

## Делаем паузу в 10 сек, чтобы файл php.list в /etc/apt/sources.list.d создался и был итегрирован в систему
sleep 10

## Обновляем сведения о репозитариях и апгрейдим систему
sudo apt update; sudo apt full-upgrade

## Установливаем все необходимые для работы HTTPAceProxy утилиты программы и пакеты: python2.7 для работы Acestream (по умолчанию в 20.04 только 3.6.9), Python3.6, PHP, L.A.M.P., Supervisor
sudo apt install net-tools git python2.7 libpython2.7 python-apsw python-setuptools mc htop ffmpeg libzbar-dev libzbar0 libffi-dev supervisor tor tor-geoipdb torsocks vlc apache2 mariadb-server-10.3 php libapache2-mod-php php-mysql php-cgi php-gd php-zip php-xml php-xmlrpc php-curl php-json php-mbstring php-cli
sudo ufw allow in 80/tcp ## открываем порт 80
sudo a2enmod rewrite; sudo sed -i "s/AllowOverride None/AllowOverride All/" /etc/apache2/apache2.conf; sudo systemctl restart apache2
sudo apt install -y python3-pip
sudo -H pip3 install cffi 'Cython==0.28' gevent psutil
sudo sh -c 'echo_supervisord_conf > /etc/supervisor/supervisord.conf'

## Создаём нужные для работы HTTPAceProxy папки и права
sudo mkdir /mnt/films /opt/acestream /opt/BackUP-HTTPAceProxy /opt/acelist /opt/lists /etc/systemd/system/tor.service.d
sudo chmod -R 777 /mnt/films

## Устанавливаем необходимый для работы Acestream Engine пакет python-m2crypto из репозитария релиза 19.04
cd /tmp
wget http://archive.ubuntu.com/ubuntu/pool/universe/m/m2crypto/python-m2crypto_0.27.0-5_amd64.deb
sudo dpkg -i python-m2crypto_0.27.0-5_amd64.deb
sudo apt install -f

## Устанавливаем pip для Python2.7 и с его помощью пакет resources
wget https://bootstrap.pypa.io/get-pip.py
sudo  python get-pip.py; pip install resources

## Устанавливаем Ace Stream Engine 3.1.49, Генератор плейлистов Acesearch и генерируем с его помощью плейлисты
wget http://flusscrack.pp.ua/ace/acestream_3.1.49_ubuntu_18.04_x86_64.tar.gz
sudo tar -zxf acestream_3.1.49_ubuntu_18.04_x86_64.tar.gz -C /opt/acestream
wget http://flusscrack.pp.ua/ace/acesearch.tar.gz
sudo tar -zxf acesearch.tar.gz -C /opt/acelist
sudo php /opt/acelist/as.php /opt/lists/as

## Добавляем в планировщик Cron задание на обновление плейлиста Генератором плейлистов Acesearch каждые 8 часов
echo -e '0 */8 * * * php /opt/acelist/as.php /opt/lists/as' | sudo crontab -

## Устанавливаем непосредственно саму HTTPAceProxy от Pepsik-Kyev и настраиваем в ней конфиги и плагины.
cd /opt; sudo git clone https://github.com/pepsik-kiev/HTTPAceProxy.git
cd /opt/HTTPAceProxy
sudo sed -i -e 's/acespawn = False/acespawn = True/' -e "s|acecmd = '/opt/acestream/start-engine --client-console --live-buffer 25 --vod-buffer 10'|acecmd = '/opt/acestream/start-engine --client-console --bind-all --service-remote-access --access-token ReplaceMe --service-access-token user --stats-report-peers --live-buffer 25 --vod-buffer 10 --max-connections 500 --vod-drop-max-age 120 --max-peers 50 --max-upload-slots 50 --download-limit 0 --stats-report-interval 2 --slots-manager-use-cpu-limit 1 --core-dlr-periodic-check-interval 5 --check-live-pos-interval 5 --refill-buffer-interval 1 --core-skip-have-before-playback-pos 1 --webrtc-allow-outgoing-connections 1 --allow-user-config --upload-limit 0 --cache-dir /tmp/.ACEStream --state-dir /tmp/.ACEStream --log-file /var/log/acestream.log --log-debug 0'|" -e 's/httpport = 8000/httpport = 8081/' -e 's/use_chunked = True/use_chunked = False/' -e 's/loglevel = logging.INFO/loglevel = logging.DEBUG/' aceconfig.py -e "s|url = ''|url = 'file:///opt/lists/as.m3u'|" -e 's/updateevery = 0/updateevery = 60/' plugins/config/torrenttv.py
awk -v m=$123 'NR == m {next} {print}' plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null
awk '{print} /#proxies = / {print "proxies = \x7B\x27http\x27 : \x27socks5h://127.0.0.1:9050\x27, \x27https\x27 : \x27socks5h://127.0.0.1:9050\x27\x7D"}' plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null
awk -v m=$126 'NR == m {next} {print}' plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null
awk '{print} /# Channels urls or path to file/ {print "url = \x27http://f27uk3gyl2gfu4z36eifv4ob73w6xgrcms4w4vdxzcsxsobgc766ityd.onion/trash/ttv-list/ace.json\x27"}' plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null
awk '{if (match($0, "updateevery")) $3="180"; print $0}' plugins/config/torrentfilms.py | sudo tee plugins/config/torrentfilms.py > /dev/null

## Настраиваем конфиг Supervisor.
cd /etc/supervisor
sudo sed -i -e 's|file=/tmp/supervisor.sock|file=/var/run/supervisor.sock|' -e 's/;chmod=0700/chmod=0766/' -e 's/\;\[inet_http_server]/[inet_http_server]/' -e 's/;port=127.0.0.1:9001/port=*:9001/' -e 's/;user=chrism/user=root/' -e 's|logfile=/tmp/supervisord.log|logfile=/var/log/supervisor/supervisord.log|' -e 's|pidfile=/tmp/supervisord.pid|pidfile=/var/run/supervisord.pid|' -e 's/nodaemon=false/nodaemon=true/' -e 's|serverurl=unix:///tmp/supervisor.sock|serverurl=unix:///var/run/supervisor.sock|' -e 's/\;\[include]/[include]/' supervisord.conf
sudo sh -c "echo 'files = /etc/supervisor/conf.d/*.conf' >> supervisord.conf"

## Создаём юнит-конфиг запуска HTTPAceProxy в Supervisor при старте системы.
echo -e '; supervisor config file\n\n[program:01-HTTPAceProxy]\ncommand = /usr/bin/python3 /opt/HTTPAceProxy/acehttp.py\nstdout_logfile_maxbytes = 50MB\nstdout_logfile = /var/log/aceproxy.log\nstderr_logfile = /var/log/aceproxy.log\nstartsecs = 20\nstopasgroup = true\nautostart = true\nautorestart = true' | sudo tee conf.d/httpaceproxy.conf  > /dev/null

## Внесение изменений в конфигурационный файл torrc.
cd /etc/tor
awk -v m=$118 -v n=$219 'm <= NR && NR <= n {next} {print}' torrc | sudo tee torrc > /dev/null
awk '{print} /## as a relay, and not make any local application connections yourself./ {print "SocksPort 9050 # Default: Bind to localhost:9050 for local connections."; print "SocksPort x.x.x.x:9100 # Bind to this address:port too."}' torrc | sudo tee torrc > /dev/null
cd

## Определение IP-адреса локальной сети и вставка его в конфигурационный файл torrc.
hostname -I | awk '{print $1}' > ip.txt
read -r ip < ip.txt
cd /etc/tor
sudo sed -i -e "s/x.x.x.x/$ip/g" torrc
cd
sudo rm ip.txt

## Создание Drop-In файла для Tor.
cd /etc/systemd/system/tor.service.d; echo -e '[Unit]\nAfter=network-online.target network.target\nWants=network-online.target' | sudo tee  override.conf > /dev/null
cd
sudo systemctl start systemd-networkd-wait-online; sudo systemctl enable systemd-networkd-wait-online

## Перезагрузка Tor-network.
sudo systemctl daemon-reload; sudo systemctl start tor.service; sudo systemctl enable tor.service

## Обновлнеие и перезапуск процессов Supervisor.
sudo supervisorctl reread; sudo supervisorctl update; sudo systemctl restart supervisor.service

## Создаём и делаем исполняемым скрипт очистки кеша Acestream
echo -e '#!/bin/bash\n\nACEADDON=/tmp\n\nfind $ACEADDON/.ACEStream/collected_torrent_files -depth -type f -mmin +15 -print0 | xargs -0 -r rm -f > /dev/null 2>&1\nfind $ACEADDON/.ACEStream/.acestream_cache -depth -type f -mmin +15 -print0 | xargs -0 -r rm -f > /dev/null 2>&1' | sudo tee /etc/cron.hourly/ACEADDON > /dev/null
sudo chmod +x /etc/cron.hourly/ACEADDON

## Создаём и делаем исполняемым скрипт бэкапа в .tar.gz и вновь настройки HTTPAceProxy раз в неделю
echo -e '#!/bin/bash\nsystemctl stop supervisor\ntar -czf /opt/BackUP-HTTPAceProxy/aceproxy-$(date +"%d.%m.%y").tar.gz /opt/HTTPAceProxy/\nrm -Rf /opt/HTTPAceProxy\ncd /opt; git clone https://github.com/pepsik-kiev/HTTPAceProxy.git\ncd /opt/HTTPAceProxy\nsed -i -e \x27s/acespawn = False/acespawn = True/\x27 -e "s|acecmd = \x27/opt/acestream/start-engine --client-console --live-buffer 25 --vod-buffer 10\x27|acecmd = \x27/opt/acestream/start-engine --client-console --bind-all --service-remote-access --access-token ReplaceMe --service-access-token user --stats-report-peers --live-buffer 25 --vod-buffer 10 --max-connections 500 --vod-drop-max-age 120 --max-peers 50 --max-upload-slots 50 --download-limit 0 --stats-report-interval 2 --slots-manager-use-cpu-limit 1 --core-dlr-periodic-check-interval 5 --check-live-pos-interval 5 --refill-buffer-interval 1 --core-skip-have-before-playback-pos 1 --webrtc-allow-outgoing-connections 1 --allow-user-config --upload-limit 0 --cache-dir /tmp/.ACEStream --state-dir /tmp/.ACEStream --log-file /var/log/acestream.log --log-debug 0\x27|" -e \x27s/httpport = 8000/httpport = 8081/\x27 -e \x27s/use_chunked = True/use_chunked = False/\x27 -e \x27s/loglevel = logging.INFO/loglevel = logging.DEBUG/\x27 aceconfig.py -e "s|url = \x27\x27|url = \x27file:///opt/lists/as.m3u\x27|" -e \x27s/updateevery = 0/updateevery = 60/\x27 plugins/config/torrenttv.py\nawk -v m=$123 \x27NR == m {next} {print}\x27 plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null\nawk \x27{print} /#proxies = / {print "proxies = \\x7B\\x27http\\x27 : \\x27socks5h://127.0.0.1:9050\\x27, \\x27https\\x27 : \\x27socks5h://127.0.0.1:9050\\x27\\x7D"}\x27 plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null\nawk -v m=$126 \x27NR == m {next} {print}\x27 plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null\nawk \x27{print} /# Channels urls or path to file/ {print "url = \\x27http://f27uk3gyl2gfu4z36eifv4ob73w6xgrcms4w4vdxzcsxsobgc766ityd.onion/trash/ttv-list/ace.json\\x27"}\x27 plugins/config/torrenttelik.py | sudo tee plugins/config/torrenttelik.py > /dev/null\nawk \x27{if (match($0, "updateevery")) $3="180"; print $0}\x27 plugins/config/torrentfilms.py | sudo tee plugins/config/torrentfilms.py > /dev/null\ncd\nsystemctl start supervisor\nexit' | sudo tee /etc/cron.weekly/BACKUP > /dev/null
sudo chmod +x /etc/cron.weekly/BACKUP

## Создаём и делаем исполняемым скрипт очистки .tar.gz-бэкапов старше 21 дня раз в месяц
echo -e '#!/bin/bash\n\nCLEANBACKUP=/opt\n\nfind $CLEANBACKUP/BackUP-HTTPAceProxy -depth -type f -name '*.tar.gz' -mtime +21 -print0 | xargs -0 rm -f > /dev/null 2>&1' | sudo tee /etc/cron.monthly/CLEANBACKUP > /dev/null
sudo chmod +x /etc/cron.monthly/CLEANBACKUP

## Выход из установки
exit
